/**
 * @descript (用一句话描述改方法的作用)
 * @author 李海涛
 * @createTime 2016年9月23日下午1:13:49
 * @version 1.0
 */
package com.JavaClub.util;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Map;

import javax.crypto.spec.SecurityHelper;
import javax.imageio.ImageIO;
import javax.imageio.stream.ImageOutputStream;
import javax.servlet.http.HttpServletRequest;

import Decoder.BASE64Decoder;

/**
 * @descript (生成二维码)
 * @author 李海涛
 * @createTime 2016年9月23日下午1:13:49
 * @version 1.0
 */
public class CreateCode {

    //生成的二维码的中间LOGO的base64编码
    //瑞臻征信  public static final String LOGO_BASE64="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";
	//信 public static final String LOGO_BASE64="";
	//信用新建  
	public static final String LOGO_BASE64="";

    /**
     * 
     * @descript (生成二维码名片  带外圈)
     * @author 李海涛
     * @since 2016年9月23日下午1:14:16
     * @param request
     * @param pd 里面必须要有pripid 和 entname
     * @return 二维码的base64编码
     * @throws Exception
     */
    public static String CreateQRCodeCircle2(HttpServletRequest request,PageData pd){
        String Base64 = "";
        try {
            //二维码请求地址
            //String encoderContent =  Const.TwoDimensionCodePath + "KeyNo=" + pd.getString("pripid")+"&provinceCode="+ pd.getString("provinceCode");
            //生成二维码外圈
            File _file = new File(request.getSession().getServletContext().getRealPath("static/images/qrcode/Qrcircle.png"));
            Image src = ImageIO.read(_file);
            int width = src.getWidth(null);
            int height = src.getHeight(null);

            BufferedImage image = new BufferedImage(width, height,BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = image.createGraphics();
            g2d.drawImage(src, 0, 0, width, height, null);
            g2d.dispose();          
            image = Watermark.getSealBottom(image, Const.GETSEAL_BOTTOM); 
            image = Watermark.getSealTop(image, pd.getString("entname") == null ? Const.GETSEAL_TOP : pd.getString("entname").toString());
            pd.put("width","360");
            pd.put("color", "0");
            BufferedImage creditcode =CreateQRCode(request,pd);
            //BufferedImage creditcode = Watermark.CreditCode(encoderContent, (int)((width-((width*(Watermark.THIRD_ARC+0.05f)))*2)*0.8f));
            image=Watermark.setCodeOnCenter(image, creditcode);
            //生成二维码Logo
            /*  File file = new File(request.getSession().getServletContext().getRealPath("static/images/qrcode/Logo.png"));
            Image im = ImageIO.read(file);
            image = Watermark.createPhotoAtCenter((BufferedImage)im,image);*/
            //image = Watermark.getSealCenter(image, "IDcode");//加字

            BufferedImage i = new BufferedImage(image.getWidth(null)+10, image.getHeight(null)+10,
                    BufferedImage.TYPE_INT_ARGB);
            g2d = i.createGraphics();
            g2d.drawImage(image, 5, 5, image.getWidth(null), image.getHeight(null), null);
            g2d.dispose();

            //获取输入流转Base64
            ByteArrayOutputStream bs = new ByteArrayOutputStream();
            ImageOutputStream imOut = ImageIO.createImageOutputStream(bs); 
            ImageIO.write(image, "png",imOut); 
            InputStream is= new ByteArrayInputStream(bs.toByteArray()); 
            Base64 = Base64Image.getBase64StringFromInputStream(is);
            //生成文件
            //ImageIO.write(image, "png", new File(filePath));
        } catch (Exception ex) {

        }
        return Base64;
    }

    /**
     * 
     * @descript (生成二维码名片  带外圈)
     * @author 李海涛
     * @since 2016年9月23日下午1:14:16
     * @param request
     * @param pd 里面必须要有pripid 和 entname
     * @return BufferedImage
     * @throws Exception
     */
    public static BufferedImage CreateQRCodeCircleBufferedImage(HttpServletRequest request,PageData pd){
        BufferedImage image = null;
        try {
            //二维码请求地址
            // String encoderContent =  Const.TwoDimensionCodePath + "KeyNo=" + pd.getString("pripid")+"&provinceCode="+ pd.getString("provinceCode");
            //生成二维码外圈
            File _file = new File(request.getSession().getServletContext().getRealPath("static/images/qrcode/Qrcircle.png"));
            Image src = ImageIO.read(_file);
            int width = src.getWidth(null);
            int height = src.getHeight(null);

            image = new BufferedImage(width, height,BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = image.createGraphics();
            g2d.drawImage(src, 0, 0, width, height, null);
            g2d.dispose();          
            image = Watermark.getSealBottom(image, Const.GETSEAL_BOTTOM); 
            image = Watermark.getSealTop(image, pd.getString("entname") == null ? Const.GETSEAL_TOP : pd.getString("entname").toString());


            pd.put("width","360");
            pd.put("color", "0");
            BufferedImage creditcode =CreateQRCode(request,pd);
            // Watermark.CreditCode(encoderContent, (int)((width-((width*(Watermark.THIRD_ARC+0.05f)))*2)*0.8f));
            image=Watermark.setCodeOnCenter(image, creditcode);
            //生成二维码Logo
            /*File file = new File(request.getSession().getServletContext().getRealPath("static/images/qrcode/Logo.png"));
            Image im = ImageIO.read(file);
            image = Watermark.createPhotoAtCenter((BufferedImage)im,image);*/
            image = Watermark.getSealCenter(image, "IDcode");

            BufferedImage i = new BufferedImage(image.getWidth(null)+10, image.getHeight(null)+10,
                    BufferedImage.TYPE_INT_ARGB);
            g2d = i.createGraphics();
            g2d.drawImage(image, 5, 5, image.getWidth(null), image.getHeight(null), null);
            g2d.dispose();


        } catch (Exception e) {

        }
        return image;
    }
    /**
     * 
     * @descript (生成二维码名片  不带外圈)
     * @author 李海涛
     * @since 2016年9月23日下午1:14:16
     * @param request
     * @param pd 里面必须要有pripid 和 entname
     * @return 二维码的base64编码
     * @throws Exception
     */
    public static String CreateQRCodeCircle1(HttpServletRequest request,PageData pd){
        String Base64="";
        try {
            pd.put("width","360");//360
            pd.put("color", "0");
            BufferedImage creditcode =CreateQRCode(request,pd);
            //获取输入流转Base64
            ByteArrayOutputStream bs = new ByteArrayOutputStream();
            ImageOutputStream imOut = ImageIO.createImageOutputStream(bs); 
            ImageIO.write(creditcode, "png",imOut); 
            InputStream is= new ByteArrayInputStream(bs.toByteArray()); 

            Base64= Base64Image.getBase64StringFromInputStream(is);
        } catch (Exception e) {
        }
        return Base64;
    }

    /**
     * 
     * @descript (调用中国二维码认证注册中心生成二维码)
     * @author 李海涛
     * @since 2016年10月13日上午11:54:28
     * @param request
     * @param pd1 pd 参数中必须要有pripid
     * @return BufferedImage
     */
    public static BufferedImage CreateQRCode(HttpServletRequest request,PageData pd1) throws IOException{
        byte[] bytes1 =new BASE64Decoder().decodeBuffer(CreateQRCodeCircle(request, pd1));
        ByteArrayInputStream bais = new ByteArrayInputStream(bytes1);
        BufferedImage bufferedImage = ImageIO.read(bais);
        return bufferedImage;
    }

    /**
     * 
     * @descript (调用中国二维码认证注册中心生成二维码)
     * @author 李海涛
     * @since 2016年10月13日上午11:54:28
     * @param request
     * @param pd1 pd 参数中必须要有pripid
     * @return 二维码的base64
     */
    public static String CreateQRCodeCircle(HttpServletRequest request,PageData pd1){
        String encoderContent="";
        if(pd1.getString("toUrl")!=null && pd1.getString("toUrl")!=""){
            encoderContent=pd1.getString("toUrl");
        }else{
            encoderContent =  Const.TwoDimensionCodePath + "KeyNo=" + SecurityHelper.getEncrypt(pd1.getString("pripid"))+"&provinceCode="+ pd1.getString("provinceCode");;
        }
        PageData pd=new PageData();
        pd.put("access_token", "XBrGHOiHWCJy04i4AAAAAFD83");//唯一的平台授权key（必填） 
        pd.put("code", encoderContent);//码内容（必填） 
        pd.put("isMargin", "0");//是否带边框（0 不带边框，1带边框）（必填） 
        pd.put("unitIcon", LOGO_BASE64);//单位 logo（将单位 logo 图片转换为 base64 字符串）
        pd.put("qrCodeSize", pd1.get("width")==null ? "360" : pd1.get("width"));//像素大小(单位：px) (当 isMargin=1 时，qrCodeSize 只能为 400、600、800 中的一个值) （必填）
        pd.put("color", pd1.get("color")==null ? "1" : pd1.get("color"));//码图颜色（0 彩色，1 黑色）（必填） 
        Map<String, Object> resultMap = Connect.sendConnectByPdToMap2("http://api.idcode.org.cn/AllInterFace/CreateCodePicWithMargin", pd, "POST");
        String CodePicBase64Str=resultMap.get("CodePicBase64Str").toString();
        return CodePicBase64Str;
    }


    public static void main(String[] args) throws FileNotFoundException, IOException {
        PageData pd=new PageData();
      //  String code = "http://m.qi315.cn/baseinfo/GoToIndex.do?KeyNo=14840540299102236220&provinceCode=36";
        String code = "http://101.201.211.27:8282//zhirong.credith5/baseinfo/downloadApp.do?type=4";//下载app的二维码
        pd.put("access_token", "XBrGHOiHWCJy04i4AAAAAFD83");//唯一的平台授权key（必填） 
        pd.put("code", code);//码内容（必填） 
        pd.put("isMargin", "0");//是否带边框（0 不带边框，1带边框）（必填） 
        pd.put("unitIcon", LOGO_BASE64);// 单位 logo（将单位 logo 图片转换为 base64 字符串）
        pd.put("qrCodeSize", "360	");//像素大小(单位：px) (当 isMargin=1 时，qrCodeSize 只能为 400、600、800 中的一个值) （必填）
        pd.put("color", "0");//码图颜色（0 彩色，1 黑色）（必填） 
        Map<String, Object> resultMap = Connect.sendConnectByPdToMap2("http://api.idcode.org.cn/AllInterFace/CreateCodePicWithMargin", pd, "post");
        String CodePicBase64Str=resultMap.get("CodePicBase64Str").toString();
        System.out.println(CodePicBase64Str);
        Base64Image.getFileFromBase64String(CodePicBase64Str, "C:\\Users\\Sakura.Sky\\Desktop\\tretrertre.jpg");
    }
    public static void main1(String[] args) throws IOException {
        try {
            //二维码请求地址
            String encoderContent =  Const.TwoDimensionCodePath + "KeyNo=54545454";
            int size = 360;
            BufferedImage creditcode = Watermark.CreditCode(encoderContent, (int)((size-((size*(Watermark.THIRD_ARC+0.05f)))*2)*0.8f));
            Graphics2D g2d = creditcode.createGraphics();
            //生成二维码Logo
            File file = new File("C:\\Users\\Sakura.Sky\\Desktop\\Logo.png");
            Image im = ImageIO.read(file);
            creditcode = Watermark.createPhotoAtCenter((BufferedImage)im,creditcode);

            BufferedImage i = new BufferedImage(im.getWidth(null)+10, im.getHeight(null)+10,
                    BufferedImage.TYPE_INT_ARGB);
            g2d = i.createGraphics();
            g2d.drawImage(creditcode, 5, 5, im.getWidth(null), im.getHeight(null), null);
            g2d.dispose();

            ImageIO.write(creditcode, "png", new File("C:\\Users\\Sakura.Sky\\Desktop\\test.png"));
        } catch (Exception e) {
        }
    }
}
